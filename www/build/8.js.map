{"version":3,"sources":["../../src/pages/channel-chat/channel-chat.module.ts","../../src/components/components.module.ts","../../src/components/login-form/login-form.ts","../../src/components/register-form/register-form.ts","../../src/components/edit-profile-form/edit-profile-form.ts","../../src/components/profile-view/profile-view.ts","../../src/components/profile-search/profile-search.ts","../../src/components/send-message-box/send-message-box.ts","../../src/components/chat-message/chat-message.ts","../../src/components/online-users/online-users.ts","../../src/pages/channel-chat/channel-chat.ts"],"names":[],"mappings":"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","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ChannelChatPage } from './channel-chat';\nimport { ComponentsModule } from \"../../components/components.module\";\n\n@NgModule({\n  declarations: [\n    ChannelChatPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ChannelChatPage),\n    ComponentsModule\n  ],\n})\nexport class ChannelChatPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/channel-chat/channel-chat.module.ts","import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LoginFormComponent } from './login-form/login-form';\nimport { RegisterFormComponent } from './register-form/register-form';\nimport { EditProfileFormComponent } from './edit-profile-form/edit-profile-form';\nimport { ProfileViewComponent } from './profile-view/profile-view';\nimport { ProfileSearchComponent } from './profile-search/profile-search';\nimport { SendMessageBoxComponent } from './send-message-box/send-message-box';\nimport { ChatMessageComponent } from './chat-message/chat-message';\nimport { OnlineUsersComponent } from \"./online-users/online-users\";\n\n@NgModule({\n  declarations: [\n    LoginFormComponent,\n    RegisterFormComponent,\n    EditProfileFormComponent,\n    ProfileViewComponent,\n    ProfileSearchComponent,\n    SendMessageBoxComponent,\n    ChatMessageComponent,\n    OnlineUsersComponent\n  ],\n  imports: [\n    IonicPageModule\n  ],\n  exports: [\n    LoginFormComponent,\n    RegisterFormComponent,\n    EditProfileFormComponent,\n    ProfileViewComponent,\n    ProfileSearchComponent,\n    SendMessageBoxComponent,\n    ChatMessageComponent,\n    OnlineUsersComponent\n  ]\n})\nexport class ComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/components.module.ts","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Account } from './../../models/account/account.interface';\nimport { LoginResponse } from \"../../models/login/login-response.interface\";\nimport { NavController } from \"ionic-angular\";\nimport { AuthService } from \"../../providers/auth/auth.service\";\n\n/**\n * Generated class for the LoginFormComponent component.\n *\n * See https://angular.io/docs/ts/latest/api/core/index/ComponentMetadata-class.html\n * for more info on Angular Components.\n */\n@Component({\n  selector: 'app-login-form',\n  templateUrl: 'login-form.html'\n})\nexport class LoginFormComponent {\n\n  account = {} as Account;\n\n  //On vas poser un écouteur sur le résultat de la méthode .auth.signInWithEmailAndPassword()\n  @Output() loginStatus: EventEmitter<LoginResponse>;\n\n  constructor(\n    private navController: NavController,\n    private authService: AuthService\n  ) {\n    this.loginStatus = new EventEmitter<LoginResponse>();\n  }\n\n  async login(){\n      const result = await this.authService.signInWithEmailAndPassword(this.account)\n      this.loginStatus.emit(result);\n  }\n\n  navigateToRegisterPage(){\n    this.navController.push('RegisterPage')\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/login-form/login-form.ts","import { Component, Output, EventEmitter } from '@angular/core';\nimport { Account } from './../../models/account/account.interface';\nimport { AuthService } from \"../../providers/auth/auth.service\";\nimport { LoginResponse } from \"../../models/login/login-response.interface\";\n\n/**\n * Generated class for the RegisterFormComponent component.\n *\n * See https://angular.io/docs/ts/latest/api/core/index/ComponentMetadata-class.html\n * for more info on Angular Components.\n */\n@Component({\n  selector: 'app-register-form',\n  templateUrl: 'register-form.html'\n})\nexport class RegisterFormComponent {\n\n  text: string;\n  account = {} as Account;\n  @Output() registerStatus: EventEmitter<LoginResponse>;\n\n  constructor(private authService: AuthService) {\n    // (!) Ne pas oublier après l'avoir typer plus haut de l'instancier\n    this.registerStatus = new EventEmitter<LoginResponse>();\n  }\n  async register(){\n    const result = await this.authService.createUserWithEmailAndPassword(this.account);\n    this.registerStatus.emit(result);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/register-form/register-form.ts","import { Component, OnDestroy, Output, EventEmitter, Input, OnInit } from '@angular/core';\nimport { Profile } from \"../../models/profile/profile.interface\";\nimport { AuthService } from \"../../providers/auth/auth.service\";\nimport { Subscription } from 'rxjs';\nimport { DataService } from \"../../providers/data/data.service\";\nimport { User } from 'firebase/app';\n/**\n * Generated class for the EditProfileFormComponent component.\n *\n * See https://angular.io/docs/ts/latest/api/core/index/ComponentMetadata-class.html\n * for more info on Angular Components.\n */\n@Component({\n  selector: 'edit-profile-form',\n  templateUrl: 'edit-profile-form.html'\n})\nexport class EditProfileFormComponent implements OnInit, OnDestroy{\n  ngOnInit(): void {\n    if(!this.profile){\n      this.profile = {} as Profile;\n    }\n  }\n  ngOnDestroy(): void {\n    this.authentificateUser$.unsubscribe();\n  }\n  @Output() saveProfileResult: EventEmitter<Boolean>\n\n  text: string;\n  @Input() profile : Profile;\n\n  //(!)\n  // Convention Style Guide de mettre un $ quand il cela concerne un observable\n  private authentificateUser$ : Subscription;\n  private authentificateUser : User;\n\n  constructor(private authService: AuthService, private dataService: DataService) {\n    this.saveProfileResult = new EventEmitter();\n    // (?) Je sais pas pourquoi je dois le stocker dans une variable de type Subscription\n    this.authentificateUser$ = this.authService.getAuthenticateUser().subscribe((user: User) => {\n      this.authentificateUser = user;\n    });\n\n  }\n\n  async saveProfile(){\n    if(this.authentificateUser){\n      this.profile.email = this.authentificateUser.email;\n      const result = await this.dataService.saveProfile(this.authentificateUser, this.profile);\n\n      // On signal dans l'application qu'un utilisateur a été enregistré\n      this.saveProfileResult.emit(result);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/edit-profile-form/edit-profile-form.ts","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { DataService } from \"../../providers/data/data.service\";\nimport { AuthService } from \"../../providers/auth/auth.service\";\nimport { User } from \"firebase/app\";\nimport { Profile } from \"../../models/profile/profile.interface\";\nimport { LoadingController, Loading } from \"ionic-angular\";\n\n/**\n * Generated class for the ProfileViewComponent component.\n *\n * See https://angular.io/docs/ts/latest/api/core/index/ComponentMetadata-class.html\n * for more info on Angular Components.\n */\n@Component({\n  selector: 'app-profile-view',\n  templateUrl: 'profile-view.html'\n})\nexport class ProfileViewComponent implements OnInit{\n\n  text: string;\n  public userProfile: Profile;\n  private loader: Loading;\n\n  @Output() existingProfile: EventEmitter<Profile>;\n\n  constructor(private dataService: DataService, private authService: AuthService, private loading: LoadingController) {\n\n    this.existingProfile = new EventEmitter<Profile>();\n\n    this.loader = this.loading.create({\n      content: \"Chargement du profile ...\"\n    });\n  }\n\n  ngOnInit(): void{\n    this.loader.present();\n    this.dataService.getAuthenticatedUserProfile().subscribe(profile =>{\n      this.userProfile = profile;\n      //Quand l'utilisateur est bien chargé, on le signal à l'application\n      this.existingProfile.emit(this.userProfile);\n      this.loader.dismiss();\n    })\n  }\n\n}\n\n/* Ancienne version\n\n //Récupère l'utilisateur qui s'est connecté via son mail\n this.authService.getAuthenticateUser().subscribe((user: User) => {\n  //Récupère le profile via l'url `/profiles/${user.uid}`\n  this.dataService.getProfile(user).subscribe((profile) =>{\n    this.userProfile = <Profile>profile.val();\n    //Quand l'utilisateur est bien chargé, on le signal à l'application\n    this.existingProfile.emit(this.userProfile);\n    this.loader.dismiss();\n  })\n})\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/profile-view/profile-view.ts","import { Component, EventEmitter, Output } from '@angular/core';\nimport { DataService } from \"../../providers/data/data.service\";\nimport { Profile } from \"../../models/profile/profile.interface\";\n\n/**\n * Generated class for the ProfileSearchComponent component.\n *\n * See https://angular.io/docs/ts/latest/api/core/index/ComponentMetadata-class.html\n * for more info on Angular Components.\n */\n@Component({\n  selector: 'app-profile-search',\n  templateUrl: 'profile-search.html'\n})\nexport class ProfileSearchComponent {\n  @Output() selectedProfile: EventEmitter<Profile>;\n  query: string;\n  profileList: Profile[];\n\n  constructor(private dataService: DataService) {\n    this.selectedProfile = new EventEmitter<Profile>();\n  }\n\n  searchUser(query: string){\n    // Pour parser/unifier la requête utilisateur - .trim() permet de retirer les blancs en début et fin de chaîne.\n    const trimmedQuery = query.trim();\n\n    if(trimmedQuery === query){\n      this.dataService.searchUser(query).subscribe(profiles =>{\n        this.profileList = profiles\n        console.log(\"profileList\", this.profileList);\n      });\n    }\n  }\n\n  selectProfile(profile: Profile){\n    this.selectedProfile.emit(profile);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/profile-search/profile-search.ts","import { Component, EventEmitter, Output } from '@angular/core';\n\n/**\n * Generated class for the SendMessageBoxComponent component.\n *\n * See https://angular.io/docs/ts/latest/api/core/index/ComponentMetadata-class.html\n * for more info on Angular Components.\n */\n@Component({\n  selector: 'app-send-message-box',\n  templateUrl: 'send-message-box.html'\n})\nexport class SendMessageBoxComponent {\n  @Output() sendMessage: EventEmitter<string>\n\n  content: string;\n\n  constructor() {\n    this.sendMessage = new EventEmitter<string>();\n  }\n\n  send(){\n    this.sendMessage.emit(this.content);\n    this.content = \"\";\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/send-message-box/send-message-box.ts","import { Component, Input } from '@angular/core';\nimport { Messages } from \"./../../models/messages/messages.interface\";\n\n/**\n * Generated class for the ChatMessageComponent component.\n *\n * See https://angular.io/docs/ts/latest/api/core/index/ComponentMetadata-class.html\n * for more info on Angular Components.\n */\n@Component({\n  selector: 'app-chat-message',\n  templateUrl: 'chat-message.html'\n})\nexport class ChatMessageComponent {\n\n  text: string;\n  @Input() chatMessage: Messages;\n  @Input() chatIndex: number;\n\n  constructor() {\n    console.log('Hello ChatMessageComponent Component');\n    this.text = 'Hello World';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chat-message/chat-message.ts","import { Component, OnInit } from '@angular/core';\nimport { DataService } from \"../../providers/data/data.service\";\nimport { FirebaseListObservable } from \"angularfire2/database\";\nimport { Profile } from \"../../models/profile/profile.interface\";\n\n/**\n * Generated class for the OnlineUsersComponent component.\n *\n * See https://angular.io/docs/ts/latest/api/core/index/ComponentMetadata-class.html\n * for more info on Angular Components.\n */\n@Component({\n  selector: 'online-users',\n  templateUrl: 'online-users.html'\n})\nexport class OnlineUsersComponent implements OnInit {\n  ngOnInit(): void {\n    this.setOnlineUser();\n    this.getOnlineUsers();\n  }\n\n  userList: FirebaseListObservable<Profile[]>;\n\n  constructor(private dataService: DataService) {\n  }\n\n  //Chaque fois qu'un utilisateur se connecte à l'application la base de donnée des \"utilisateurs connectés\" se met à jour\n  setOnlineUser(){\n    this.dataService.getAuthenticatedUserProfile().subscribe(profile => {\n      console.log(\"profile\", profile);\n      this.dataService.setUserOnline(profile);\n    });\n  }\n\n  getOnlineUsers(){\n    this.userList = this.dataService.getOnlineUsers();\n    console.log(\"userList\", this.userList);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/online-users/online-users.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { Channels } from \"../../models/channels/channels.interface\";\nimport { ChatService } from \"../../providers/chat/chat.service\";\nimport { Observable } from \"rxjs/Observable\";\nimport { FirebaseListObservable } from \"angularfire2/database\";\nimport { ChannelMessage } from \"../../models/channels/channel-message.interface\";\n\n/**\n * Generated class for the ChannelChatPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-channel-chat',\n  templateUrl: 'channel-chat.html',\n})\nexport class ChannelChatPage {\n\n  channel: Channels;\n  channelMessages: FirebaseListObservable<ChannelMessage[]>;\n\n  constructor(\n    private chatService: ChatService,\n    public navCtrl: NavController,\n     public navParams: NavParams) {\n  }\n\n  ionViewWillLoad() {\n    this.channel = this.navParams.get('channel');\n    this.channelMessages = this.chatService.getChannelChatRef(this.channel.$key);\n    console.log(\"channelMessages\", this.channelMessages);\n  }\n\n  sendMessage(content : string){\n    let channelMessage: ChannelMessage = {\n      content: content\n    }\n\n    this.chatService.addChannelMessage(this.channel.$key, channelMessage.content);\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/channel-chat/channel-chat.ts"],"sourceRoot":""}