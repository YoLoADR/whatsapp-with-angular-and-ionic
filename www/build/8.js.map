{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACZ;AAUpC,IAAa,eAAe;IAA5B;IAA8B,CAAC;IAAD,sBAAC;AAAD,CAAC;AAAlB,eAAe;IAR3B,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,yDAAS;SACV;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;SACpC;KACF,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;ACZc;AAC0B;AAEpE;;;;;GAKG;AAOH,IAAa,SAAS;IAEpB,mBAAoB,OAAsB,EAAU,SAAoB;QAApD,YAAO,GAAP,OAAO,CAAe;QAAU,cAAS,GAAT,SAAS,CAAW;IACxE,CAAC;IAED,4GAA4G;IAC5G,iLAAiL;IACjL,iGAAiG;IACjG,kCAAc,GAAd,UAAe,QAAgB;QAC7B;;;;;;UAME;QACF,wHAAwH;QACxH,8DAA8D;QAC9D,QAAQ,KAAK,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAIzF,CAAC;IAEH,gBAAC;AAAD,CAAC;AAxBY,SAAS;IALrB,wEAAS,EAAE;IACX,wEAAS,CAAC;QACT,QAAQ,EAAE,YAAY;OACG;KAC1B,CAAC;cAGwE;AAsBzE;SAxBY,EAAS","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n  ],\n})\nexport class LoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the LoginPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n\n  constructor(private navCtrl: NavController, private navParams: NavParams) {\n  }\n\n  // Bonne pratique pour faire une fonction réutilisable -> exemple : (click)=\"navigateToPage('RegisterPage')\"\n  // (!) Si la personne click sur \"login\" la page suivantes (InboxPage) a un \"back boutton\" alors qu'il devrait juste avoir un boutton logout -> pour cela in va créer une fonction\n  // la page suivantes est InboxPage car on la défini comme première root dans les Tabs de TabsPage\n  navigateToPage(pageName: string){\n    /*\n      if(pageName === 'TabsPage'){\n        this.navCtrl.setRoot(pageName);\n      }else {\n        this.navCtrl.push(pageName)\n      }\n    */\n    // Si la page est égale à TabsPage (suite à un click sur login) -> on le redirige vers une page qui devient la page Root\n    // Sinon on le redirige vers la page selectionné (par default)\n    pageName === 'TabsPage' ? this.navCtrl.setRoot(pageName) : this.navCtrl.push(pageName);\n\n\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}